{"version":3,"sources":["components/ExchangeHeader/logo.svg","components/ExchangeHeader/coinpaprika.svg","components/UserContext/UserContext.jsx","components/ExchangeHeader/ExchangeHeader.jsx","components/NavBar/NavBar.jsx","components/AuthRoute/AuthRoute.jsx","pages/CoinPage.jsx","components/Coins/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","pages/Home.jsx","pages/About.jsx","pages/Profile.jsx","pages/SignUp.jsx","pages/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","createContext","Img","styled","img","Header","header","H1","h1","Span","span","SpanLink","a","SvgPaprika","ExchangeHeader","src","logo","alt","className","href","paprikaLogo","width","height","loading","Component","Nav","nav","DivContainer","div","ButtonLogIn","button","ButtonLogOut","SpanToggler","linkStyle","color","activeLink","fontWeight","textDecoration","withRouter","history","useState","isOpen","setOpen","classTarget","classTrigger","useContext","isAuth","setIsAuth","role","aria-label","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","id","to","exact","style","activeStyle","AuthRoute","component","rest","result","render","DivCoin","Hcoin","h2","LiCoin","li","CoinPage","match","tweets","setTweets","url","params","useEffect","componentDidMount","axios","get","response","tweetsList","data","slice","map","coin","status","link","status_link","tweet","index","key","Td","td","TdControls","TdName","LinkStyle","blinkingGreen","keyframes","blinkingRed","TdGreen","TdRed","ButtonX","ButtonRefresh","Coin","props","name","ticker","showBalance","balance","change","price","isAutoRefresh","action","event","preventDefault","handleRefresh","handleTransaction","path","Table","table","CoinList","coinData","Section","section","ButtonHelicopter","ButtonToggleBalance","Balance","formatter","Intl","NumberFormat","currency","AccountBalance","buttonBalanceText","buttonRefreshText","content","format","amount","btnBalanceClass","handleAutoRefresh","handleToggleBalance","handleBrrrr","tickerUrl","formatPrice","parseFloat","Number","toFixed","Home","setBalance","setShowBalance","setCoinData","setIsAutoRefresh","length","interval","setInterval","autoRefresh","clearInterval","coinIds","promises","Promise","all","coinPriceData","symbol","quotes","valueChangeId","newPrice","newCoinData","values","newValues","responses","oldValue","oldBalance","isBuy","balanceChange","canBuy","canSell","DivAbout","Li","About","DivProfile","Profile","DivSignUp","SignUp","NotFound","title","DivApp","App","Provider","value","marginTop","strict","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,gMCE9BC,EAAcC,0B,u7BCI3B,IAAMC,EAAMC,IAAOC,IAAV,KAKHC,EAASF,IAAOG,OAAV,KAYNC,EAAKJ,IAAOK,GAAV,KAIDC,EAAON,IAAOO,KAAV,KAILC,EAAWR,IAAOS,EAAV,KAOPC,EAAaV,IAAOC,IAAV,KAIIU,E,uKAGb,OACI,kBAACT,EAAD,KACI,kBAACH,EAAD,CAAKa,IAAKC,IAAMC,IAAI,eACpB,kBAACV,EAAD,sBAGA,kBAACE,EAAD,KACI,kBAACE,EAAD,CAAUO,UAAU,iBAAiBC,KAAK,4BAA1C,aAEI,kBAACN,EAAD,CAAYE,IAAKK,IAAaC,MAAM,MAAMC,OAAO,KAC9CJ,UAAU,8BAA8BD,IAAI,GAAGM,QAAQ,gB,GAbtCC,a,ozBCrC5C,IAAMC,EAAMtB,IAAOuB,IAAV,KAIHC,EAAexB,IAAOyB,IAAV,KAMZC,EAAc1B,IAAO2B,OAAV,KAWXC,EAAe5B,IAAO2B,OAAV,KAYZE,EAAc7B,IAAOO,KAAV,KAIXuB,EAAY,CAChBC,MAAO,WAGHC,EAAa,CACjBD,MAAO,QACPE,WAAY,OACZC,eAAgB,qBAmFHC,eAhFA,SAAC,GAAgB,EAAdC,QAAe,IAAD,EACJC,oBAAS,GADL,mBACvBC,EADuB,KACfC,EADe,KAGxBC,EAAcF,EAAS,2BAA6B,gCACpDG,EAAeH,EAAS,gDAAkD,sCAJlD,EAMAI,qBAAW7C,GAAjC8C,EANsB,EAMtBA,OAAQC,EANc,EAMdA,UAWhB,OAEE,kBAACtB,EAAD,CAAKP,UAAU,2DAA2D8B,KAAK,aAC7EC,aAAW,mBACX,kBAACtB,EAAD,CAAcT,UAAU,aAEtB,+BAGA,4BAAQA,UAAS,UAAK0B,GAAgBM,QAAS,kBAAMR,GAASD,IAASU,KAAK,SAASC,cAAY,WAAWC,cAAY,iBAAiBC,gBAAc,gBAAgBC,gBAAc,QAAQN,aAAW,qBACtM,kBAACjB,EAAD,CAAad,UAAU,yBAGzB,yBAAKA,UAAS,UAAKyB,GAAea,GAAG,iBAEnC,wBAAItC,UAAU,sBACZ,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAASuC,GAAG,IAAIC,OAAK,EAACxC,UAAU,cAAcyC,MAAO1B,EAAW2B,YAAazB,GAA7E,SAIF,wBAAIjB,UAAU,iBACZ,kBAAC,IAAD,CACEuC,GAAG,SAASC,OAAK,EACjBxC,UAAU,cAAcyC,MAAO1B,EAAW2B,YAAazB,GAFzD,UAMF,wBAAIjB,UAAU,iBACZ,kBAAC,IAAD,CAASuC,GAAG,WAAWC,OAAK,EAC1BxC,UAAU,cAAcyC,MAAO1B,EAAW2B,YAAazB,GADzD,YAKF,wBAAIjB,UAAU,iBACZ,kBAAC,IAAD,CAASuC,GAAG,UAAUC,OAAK,EACzBxC,UAAU,cAAcyC,MAAO1B,EAAW2B,YAAazB,GADzD,aAOJ,yBAAKjB,UAAU,eACb,yBAAKA,UAAU,WACX4B,EAKE,kBAACf,EAAD,CAAcb,UAAU,MAAMgC,QAtD3B,WACjBH,GAAU,KAqDI,WAJF,kBAAClB,EAAD,CAAaX,UAAU,MAAMgC,QAtDzB,WAChBH,GAAU,KAqDE,kB,QCnGDc,EAVG,SAAC,GAAuC,IAA1BrC,EAAyB,EAApCsC,UAAyBC,EAAW,6BAIjDC,EAFanB,qBAAW7C,GAAtB8C,OAEgB,kBAACtB,EAAD,MAAiB,kBAAC,IAAD,CAAUiC,GAAG,YAGtD,OAAQ,kBAAC,IAAD,iBAAWM,EAAX,CAAiBE,OAAS,kBAAOD,O,0cCP3C,IAAME,GAAU/D,IAAOyB,IAAV,MAKPuC,GAAQhE,IAAOiE,GAAV,MAKLC,GAASlE,IAAOmE,GAAV,MAuDIC,GA1CC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACAhC,mBAAS,IADT,mBACrBiC,EADqB,KACbC,EADa,KAEtBC,EANU,wCAMUH,EAAMI,OAAOpB,GALtB,WAQjBqB,qBAAU,WACJC,OAIN,IAAMA,EAAiB,uCAAG,8BAAAlE,EAAA,sEACCmE,KAAMC,IAAKL,GADZ,OAChBM,EADgB,OAGhBC,EAAaD,EAASE,KAAKC,MAAM,EAAG,IAAIC,KAAK,SAAAC,GAChD,MAAO,CACHC,OAASD,EAAKC,OACdC,KAAOF,EAAKG,gBAInBf,EAAUQ,GAVY,2CAAH,qDAavB,OACI,kBAAChB,GAAD,KACG,kBAACC,GAAD,CAAOjD,UAAU,SAAjB,0BAAiDsD,EAAMI,OAAOpB,IAC3D,iCACM,4BAEIiB,EAAOY,KAAI,SAACK,EAAOC,GAAR,OACP,kBAACtB,GAAD,CAAQuB,IAAMD,GACV,uBAAGxE,KAAOuE,EAAMF,MAAhB,IAA0BE,EAAMH,gB,4wCCnDhE,IAAMM,GAAK1F,IAAO2F,GAAV,MAKFC,GAAa5F,YAAO0F,GAAP1F,CAAH,MAIV6F,GAAS7F,YAAO0F,GAAP1F,CAAH,MAIN8F,GAAY,CACd/D,MAAO,WAILgE,GAAgBC,YAAH,MAKbC,GAAcD,YAAH,MAMVE,GAAUlG,IAAO2F,GAAV,KAIGI,IAEXI,GAAQnG,IAAO2F,GAAV,KAIMM,IAIXG,GAAUpG,IAAO2B,OAAV,MAMP0E,GAAgBrG,IAAO2B,OAAV,MAMJ,SAAS2E,GAAKC,GAAQ,IAEzB5D,EAAWD,qBAAW7C,GAAtB8C,OAsBR,OACI,oCACI,4BACI,kBAACkD,GAAD,KACI,kBAAC,IAAD,CAAMrC,MAAOsC,GAAWxC,GAAE,gBAAWiD,EAAMlD,KAC1CkD,EAAMC,OAGX,kBAACd,GAAD,KAAMa,EAAME,QACZ,kBAACf,GAAD,KAAMa,EAAMG,YAAcH,EAAMI,QAAU,IAA1C,KACmB,IAAjBJ,EAAMK,OAAe,kBAAClB,GAAD,KAAKa,EAAMM,OAC5BN,EAAMK,OAAS,EAAI,kBAACV,GAAD,SAAWK,EAAMM,OAClC,kBAACV,GAAD,SAASI,EAAMM,OAEpBN,EAAMO,cAIH,KAHF,kBAACpB,GAAD,KAAI,0BAAMqB,OAAO,IACb,kBAACV,GAAD,CAAetF,UAAU,eAAegC,QAnCtC,SAACiE,GACnBA,EAAMC,iBAENV,EAAMW,cAAcX,EAAMlD,MAgCV,UAIPV,EACG,kBAACiD,GAAD,KACI,0BAAMmB,OAAO,IACT,kBAACX,GAAD,CAASrF,UAAU,kBAAkBgC,QApC3C,SAACiE,GACfA,EAAMC,iBAENV,EAAMY,mBAAkB,EAAMZ,EAAMlD,MAiChB,OACA,kBAAC+C,GAAD,CAASrF,UAAU,iBAAiBgC,QA/BzC,SAACiE,GAChBA,EAAMC,iBAENV,EAAMY,mBAAkB,EAAOZ,EAAMlD,MA4BjB,UAEQ,MAExB,kBAAC,IAAD,CAAO+D,KAAK,YAAYzD,UAAWS,M,mGC7G/C,IAAMiD,GAAQrH,IAAOsH,MAAV,MAII,SAASC,GAAShB,GAAQ,IAC/B5D,EAAWD,qBAAW7C,GAAtB8C,OAER,OACE,kBAAC0E,GAAD,CAAOtG,UAAU,sCACf,+BACE,4BACE,oCACA,sCAEA,uCACA,qCACGwF,EAAMO,cAAmC,KAAnB,uCACvBnE,EAAS,sCAAkB,OAGjC,+BAEI4D,EAAMiB,SAAStC,KAAI,gBAAGO,EAAH,EAAGA,IAAKe,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQE,EAAtB,EAAsBA,QAASE,EAA/B,EAA+BA,MAAOD,EAAtC,EAAsCA,OAAtC,OACjB,kBAACN,GAAD,CACEb,IAAKA,EACLpC,GAAIoC,EACJe,KAAMA,EACNU,cAAeX,EAAMW,cACrBC,kBAAmBZ,EAAMY,kBACzBV,OAAQA,EACRC,YAAaH,EAAMG,YACnBC,QAASA,EACTE,MAAOA,EACPD,OAAQA,EACRE,cAAeP,EAAMO,qB,0jBClCnC,IAAMW,GAAUzH,IAAO0H,QAAV,MASPC,GAAmB3H,IAAO2B,OAAV,MAIhBiG,GAAsB5H,YAAO2H,GAAP3H,CAAH,MAInB6H,GAAU7H,IAAOyB,IAAV,MAQTqG,GAAYC,KAAKC,aAAa,QAAS,CACvCxE,MAAO,WACPyE,SAAU,QAGC,SAASC,GAAe3B,GAAQ,IACnC5D,EAAWD,qBAAW7C,GAAtB8C,OAGFwF,EAAoB5B,EAAMG,YAAc,eAAiB,eACzD0B,EAAoB7B,EAAMO,cAAgB,eAAiB,eAE7DuB,EAAU,OACV9B,EAAMG,cACN2B,EAAU,8BAAM,8CAAN,IAAoCP,GAAUQ,OAAQ/B,EAAMgC,UAG1E,IAAMC,EAAkB,QAAUjC,EAAMG,YAAc,cAAgB,YAEtE,OACI,oCACI,kBAACmB,GAAD,SAAWQ,EAAX,KACA,kBAACZ,GAAD,KACI,4BAAQ1G,UAAU,eACdgC,QAASwD,EAAMkC,mBACTL,GAERzF,EACF,oCACA,kBAACiF,GAAD,CAAqB7G,UAAWyH,EAC3BzF,QAASwD,EAAMmC,qBACVP,GAEV,kBAACR,GAAD,CAAkB5G,UAAU,kBACxBgC,QAASwD,EAAMoC,aACb,uBAAG5H,UAAU,wBAGjB,O,gBC1DZ6H,GAAY,0CAEZC,GAAc,SAAAhC,GAAK,OAAIiC,WAAWC,OAAOlC,GAAOmC,QAAQ,KAsJ/CC,OApJf,SAAc1C,GAAQ,IAAD,EAEWlE,mBAAS,KAFpB,mBAEZsE,EAFY,KAEHuC,EAFG,OAGmB7G,oBAAS,GAH5B,mBAGZqE,EAHY,KAGCyC,EAHD,OAIa9G,mBAAS,IAJtB,mBAIZmF,EAJY,KAIF4B,EAJE,OAKuB/G,oBAAS,GALhC,mBAKZyE,EALY,KAKGuC,EALH,KAQnB3E,qBAAU,WACgB,IAApB8C,EAAS8B,QAEX3E,IAMF,IAAI4E,EAAW,KAQf,OAPIzC,EACFyC,EAAWC,aAAY,WACnBC,MACD,KACO3C,GACV4C,cAAcH,GAET,kBAAMG,cAAcH,OAI7B,IAAM5E,EAAiB,uCAAG,oCAAAlE,EAAA,sEACDmE,KAAMC,IAnChB,wCAkCW,cAClBC,EADkB,OAElB6E,EAAU7E,EAASE,KAAKC,MAAM,EArCrB,IAqCoCC,KAAI,SAAAC,GAAI,OAAIA,EAAK9B,MAE9DuG,EAAWD,EAAQzE,KAAI,SAAA7B,GAAE,OAAIuB,KAAMC,IAAI+D,GAAYvF,MAJjC,SAKDwG,QAAQC,IAAIF,GALX,OAKlBpC,EALkB,OAOlBuC,EAAgBvC,EAAStC,KAAI,SAAUJ,GAC7C,IAAMK,EAAOL,EAASE,KAEtB,MAAO,CACHS,IAAKN,EAAK9B,GACVmD,KAAMrB,EAAKqB,KACXC,OAAQtB,EAAK6E,OACbrD,QAAS,EACTE,MAAOgC,GAAY1D,EAAK8E,OAAL,IAAmBpD,OACtCD,OAAQkC,WAAW,OAIvBM,EAAYW,GApBY,4CAAH,qDAwBjB7C,EAAa,uCAAG,WAAOgD,GAAP,mBAAAzJ,EAAA,sEACGmE,KAAMC,IAAI+D,GAAYsB,GADzB,OACdpF,EADc,OAGdqF,EAAWtB,GAAY/D,EAASE,KAAKiF,OAAd,IAA4BpD,OAEnDuD,EAAc5C,EAAStC,KAAI,SAAUmF,GAC1C,IAAIC,EAAS,eAAQD,GAMpB,OAJIA,EAAO5E,MAAQyE,IACjBI,EAAU1D,OAASuD,EAAWG,EAAUzD,MACxCyD,EAAUzD,MAAQsD,GAEbG,KAGTlB,EAAYgB,GAfQ,2CAAH,sDAuBbX,EAAW,uCAAG,8BAAAhJ,EAAA,6DAEZ8J,EAAY/C,EAAStC,IAAT,uCAAa,WAAMmF,GAAN,mBAAA5J,EAAA,6DACzB6J,EADyB,eACRD,GADQ,SANZhH,EASkBgH,EAAO5E,IARrCb,KAAMC,IAAN,UAAa+D,IAAb,OAAyBvF,IAKD,cAGvByB,EAHuB,OAIzBqF,EAAWtB,GAAY/D,EAASE,KAAKiF,OAAd,IAA4BpD,OACvDyD,EAAU1D,OAASuD,EAAWG,EAAUzD,MACxCyD,EAAUzD,MAAQsD,EANW,kBAOtBG,GAPsB,iCANb,IAACjH,IAMY,OAAb,uDAFA,SAWQwG,QAAQC,IAAIS,GAXpB,OAWZH,EAXY,OAalBhB,EAAYgB,GAbM,2CAAH,qDAoDjB,OACE,oCACE,kBAAClC,GAAD,CACEK,OAAQ5B,EACR+B,oBAnCsB,WAC1BS,GAAe,SAAAqB,GAAQ,OAAKA,MAmCxB/B,kBAxCoB,WACxBY,GAAiB,SAAAmB,GAAQ,OAAKA,MAwC1B7B,YAjCc,WAClBO,GAAW,SAAAuB,GAAU,OAAIA,EAAa,SAiClC/D,YAAaA,EACbI,cAAeA,IACjB,kBAACS,GAAD,CACEC,SAAUA,EACVN,cAAeA,EACfC,kBAnCoB,SAACuD,EAAOR,GAChC,IAAIS,EAAgBD,EAAQ,GAAK,EAE3BN,EAAc5C,EAAStC,KAAI,SAAUmF,GACzC,IAAIC,EAAS,eAAQD,GAErB,GAAIH,IAAkBG,EAAO5E,IAAK,CAChC,IAAMmF,EAASN,EAAUzD,MAAQF,EAC3BkE,EAAUP,EAAU3D,QAAU,GACfgE,EAAgB,GAAMC,GAAaD,EAAgB,GAAME,KAG9EP,EAAU3D,SAAWgE,EACrBzB,GAAW,SAAAuB,GAAU,OAAIA,EAAaE,EAAgBL,EAAUzD,UAGlE,OAAOyD,KAGTlB,EAAYgB,IAiBR1D,YAAaA,EACbI,cAAeA,M,iOCzJvB,IAAMgE,GAAW9K,IAAOyB,IAAV,MAMRsJ,GAAK/K,IAAOmE,GAAV,MAKO,SAAS6G,GAAMzE,GAC5B,OACE,kBAACuE,GAAD,KACE,mEACuC,uBAAG9J,KAAK,mCAAR,wBADvC,aAKA,sDACE,kBAAC+J,GAAD,0CACA,kBAACA,GAAD,8CACA,kBAACA,GAAD,uCACA,kBAACA,GAAD,0DACA,kBAACA,GAAD,qDACA,kBAACA,GAAD,8BAGF,8CACE,kBAACA,GAAD,0BACA,kBAACA,GAAD,0DAGF,+KAIA,wEAA8C,MAA9C,8GAC8G,MAD9G,uJ,iHCpCN,IAAME,GAAajL,IAAOyB,IAAV,MA+BAyJ,GAzBA,WAEZ,OACE,kBAACD,GAAD,KACA,wDACA,iCAEI,mGAEF,wFAC2D,IACzD,yDAFF,sJAI8C,IAC5C,8CALF,gM,iHCjBR,IAAME,GAAYnL,IAAOyB,IAAV,MAMA,SAAS2J,GAAO7E,GAE7B,OACE,kBAAC4E,GAAD,KACE,uDACA,6I,MCTS,SAASE,GAAS9E,GAC7B,OACI,yBAAKlD,GAAG,qBACJ,yBAAKA,GAAG,eACJ,uBAAGA,GAAG,WAAWiI,MAAM,OAAvB,OACA,uBAAGvK,UAAU,mBAAb,oDAIJ,6BACI,uBAAGA,UAAU,mBAAb,gE,mKCEhB,IAAMwK,GAASvL,IAAOyB,IAAV,MAiDG+J,OA1Cf,SAAajF,GAAQ,IAAD,EACUlE,oBAAS,GADnB,mBACXM,EADW,KACHC,EADG,KAUlB,OACE,kBAAC2I,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC1L,EAAY4L,SAAb,CAAsBC,MAAO,CAAE/I,SAAQC,cACrC,kBAAC,EAAD,MAEA,yBAAK7B,UAAU,iBAAiByC,MAAO,CAAEmI,UAAW,KAClD,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOpI,OAAK,EAACqI,QAAM,EAACxE,KAAK,yBAAyBzD,UAAWsF,KAE7D,kBAAC,IAAD,CAAO1F,OAAK,EAAC6D,KAAK,SAASzD,UAAWqH,KAEtC,kBAAC,EAAD,CAAWzH,OAAK,EAAC6D,KAAK,WAAWzD,UAAWuH,KAE5C,kBAAC,IAAD,CAAO3H,OAAK,EAAC6D,KAAK,UAAUzD,UAAWyH,KAGvC,kBAAC,IAAD,CAAO7H,OAAK,EAAE6D,KAAK,6BAA6BzD,UAAWS,KAE3D,kBAAC,IAAD,CAAOgD,KAAK,IAAIzD,UAAW0H,WC5CrBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3H,MACvB,2DCZN4H,IAASnI,OACP,kBAAC,IAAMoI,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b4597e29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/coinpaprika.149f0aed.svg\";","import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport paprikaLogo from \"./coinpaprika.svg\"\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Img = styled.img`\r\n    height: 8rem; \r\n    pointer-events: none;\r\n    `;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20hv;\r\n   \r\n    display: flex;\r\n    flex-direction: row; \r\n    align-items: center;\r\n    justify-content: flex-start; \r\n    font-size: 36px; \r\n    color: white;\r\n  `;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n    `;\r\n\r\n const Span = styled.span`\r\n    margin: 15px 0 0 10px;\r\n    `;\r\n\r\nconst SpanLink = styled.a`\r\n    margin-left: 5px;\r\n    font-size: 0.7rem;\r\n    font-style: italic;\r\n    color:  #c2f0fc;\r\n    `;\r\n\r\n const SvgPaprika = styled.img`\r\n    padding: 10px 0 0 5px; \r\n    `;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                    Coin Exchange\r\n                </H1>\r\n                <Span>\r\n                    <SpanLink className=\"d-inline-block\" href=\"https://coinpaprika.com/\">\r\n                        powered by\r\n                        <SvgPaprika src={paprikaLogo} width=\"100\" height=\"30\" \r\n                           className=\"d-inline-block align-bottom\" alt=\"\" loading=\"lazy\"/>\r\n                    </SpanLink>\r\n                </Span>\r\n            </Header>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext/UserContext\";\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.nav`\r\n  padding: 0;\r\n    `;\r\n\r\nconst DivContainer = styled.div`\r\n    background-color: #282c34;\r\n    min-height: 35px;/* 100vh;*/\r\n    min-width: 100%;    \r\n  `;\r\n\r\nconst ButtonLogIn = styled.button`\r\n    background-color: #61dafb;\r\n    color: #00000;\r\n    height: 25px;\r\n    width: 60px;\r\n    padding: 0;\r\n    :hover {\r\n      font-weight: bold;\r\n    }\r\n  `;\r\n\r\nconst ButtonLogOut = styled.button`\r\n  background-color: #282c34;\r\n  color: #61dafb;\r\n  border: 1px solid #61dafb;\r\n  height: 25px;\r\n  width: 60px;\r\n  padding: 0;\r\n  :hover {\r\n    color: #c2f0fc;\r\n  }\r\n`;\r\n\r\nconst SpanToggler = styled.span`\r\n  texDecorationColor: #61dafb;\r\n`;\r\n\r\nconst linkStyle = {\r\n  color: \"#61dafb\"\r\n\r\n}\r\nconst activeLink = {\r\n  color: \"white\",\r\n  fontWeight: \"bold\",\r\n  textDecoration: \"underline #61dafb\"\r\n};\r\n\r\nconst NavBar = ({ history }) => {\r\n  const [isOpen, setOpen] = useState(true);\r\n\r\n  const classTarget = isOpen ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n  const classTrigger = isOpen ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n\r\n  const { isAuth, setIsAuth } = useContext(UserContext);\r\n\r\n  const loginUser = () => {\r\n    setIsAuth(true);\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setIsAuth(false);\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <Nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\" role=\"navigation\"\r\n      aria-label=\"main navigation\">\r\n      <DivContainer className=\"container\">\r\n\r\n        <span></span>\r\n\r\n\r\n        <button className={`${classTrigger}`} onClick={() => setOpen(!isOpen)} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\" aria-controls=\"navbarContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <SpanToggler className=\"navbar-toggler-icon\"></SpanToggler>\r\n        </button>\r\n\r\n        <div className={`${classTarget}`} id=\"navbarContent\">\r\n\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item mr-3\">\r\n              <NavLink to=\"/\" exact className=\"navbar-link\" style={linkStyle} activeStyle={activeLink} >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item mr-3\">\r\n              <NavLink\r\n                to=\"/about\" exact\r\n                className=\"navbar-link\" style={linkStyle} activeStyle={activeLink}>\r\n                About\r\n               </NavLink>\r\n            </li>\r\n            <li className=\"nav-item mr-3\">\r\n              <NavLink to=\"/profile\" exact\r\n                className=\"navbar-link\" style={linkStyle} activeStyle={activeLink} >\r\n                Profile\r\n               </NavLink>\r\n            </li>\r\n            <li className=\"nav-item mr-3\">\r\n              <NavLink to=\"/signup\" exact\r\n                className=\"navbar-link\" style={linkStyle} activeStyle={activeLink} >\r\n                Sign Up\r\n               </NavLink>\r\n            </li>\r\n          </ul>\r\n          {/* <div className=\"navbar\"> */}\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              {!isAuth ? (\r\n                <ButtonLogIn className=\"btn\" onClick={loginUser}>\r\n                  Log in\r\n                </ButtonLogIn>\r\n              ) : (\r\n                  <ButtonLogOut className=\"btn\" onClick={logoutUser}>\r\n                    Log out\r\n                  </ButtonLogOut>\r\n              )}\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </DivContainer>\r\n    </Nav>\r\n  );\r\n\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from \"../UserContext/UserContext\";\r\n\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  \r\n  const { isAuth } = useContext(UserContext);\r\n\r\n  const result = isAuth ? <Component  /> : <Redirect to=\"/signup\" />;\r\n\r\n  \r\n  return (<Route {...rest} render={ () =>  result } />);\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DivCoin = styled.div`\r\n  min-height: 77vh;\r\n\r\n`;\r\n\r\nconst Hcoin = styled.h2`\r\n    font-size: 2rem;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst LiCoin = styled.li`\r\n     text-align: left;\r\n    margin-bottom: 5px;\r\n    list-style-type: circle;\r\n    a {\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst coinBaseUrl = 'https://api.coinpaprika.com/v1/coins/';\r\nconst coinEndPoint = '/twitter';\r\n\r\n\r\nconst CoinPage = ({ match }) => {\r\n    const [tweets, setTweets] = useState([]);\r\n    const url = coinBaseUrl + match.params.id + coinEndPoint;\r\n    \r\n\r\n    useEffect(function() {\r\n          componentDidMount();\r\n    });\r\n       \r\n\r\n    const componentDidMount = async () => {\r\n        const response = await axios.get( url );\r\n\r\n        const tweetsList = response.data.slice(0, 20).map( coin => {\r\n           return({\r\n               status : coin.status, \r\n               link : coin.status_link\r\n            } );\r\n        } );\r\n\r\n        setTweets(tweetsList);\r\n    }\r\n\r\n    return (\r\n        <DivCoin>\r\n           <Hcoin className=\"title\">20 last tweets about : {match.params.id}</Hcoin>\r\n              <article>\r\n                    <ul>\r\n                        {\r\n                        tweets.map((tweet, index) =>\r\n                            <LiCoin key={ index }> \r\n                                <a href={ tweet.link }> { tweet.status }</a>\r\n                            </LiCoin>    \r\n                        )\r\n                        }\r\n                    </ul>\r\n              </article>\r\n        </DivCoin>\r\n    );\r\n\r\n}\r\n\r\nexport default (CoinPage);\r\n","import React, { useContext} from 'react';\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { UserContext } from \"../UserContext/UserContext\";\r\nimport CoinPage from '../../pages/CoinPage';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n/*styling the table*/\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 14vw;\r\n`;\r\n\r\nconst TdControls = styled(Td)`\r\nwidth: 20vw;\r\n`;\r\n\r\nconst TdName = styled(Td)`\r\nwidth: 24vw;\r\n`;\r\n\r\nconst LinkStyle = {\r\n    color: \"#61dafb\"\r\n};\r\n\r\n/*styling the prices*/\r\nconst blinkingGreen = keyframes` \r\n    0%{  background-color: #282c34; }\r\n    50%{ background-color: green; }\r\n    100%{background-color: #282c34; }\r\n`;\r\nconst blinkingRed = keyframes` \r\n    0%{  background-color: #282c34; }\r\n    50%{ background-color: red; }\r\n    100%{background-color: #282c34; } \r\n`;\r\n\r\n const TdGreen = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 16vw;\r\n     color: #abfcb6;\r\n    animation: ${blinkingGreen} ease-in-out 2s 5;\r\n`;\r\nconst TdRed = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 16vw;\r\n    color: #fc99ad;\r\n    animation: ${blinkingRed} ease-in-out 2s 5;\r\n`;\r\n\r\n/*styling the buttons*/\r\nconst ButtonX = styled.button`\r\n font-size: 11px;\r\n width: 64px;\r\n margin: 3px 5px 0;\r\n`;\r\n\r\nconst ButtonRefresh = styled.button`\r\nfont-size: 11px;\r\nwidth: 64px;\r\nmargin: 3px 5px 0;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n    const { isAuth } = useContext(UserContext);\r\n\r\n\r\n    const handleRefresh = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.handleRefresh(props.id);\r\n    }\r\n\r\n    const handleBuy = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.handleTransaction(true, props.id);\r\n    }\r\n\r\n    const handleSell = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.handleTransaction(false, props.id);\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <tr>\r\n                <TdName>\r\n                    <Link style={LinkStyle} to={`/coin/${props.id}`}>\r\n                    {props.name}\r\n                   </Link>\r\n                </TdName>\r\n                <Td>{ props.ticker }</Td>\r\n                <Td>{ props.showBalance ? props.balance : '-' } </Td>\r\n                { props.change === 0 ? <Td>{props.price}</Td> : \r\n                    ( props.change > 0 ? <TdGreen>${props.price}</TdGreen> :\r\n                        <TdRed>${props.price}</TdRed> )}\r\n            \r\n                { !props.isAutoRefresh ?  \r\n                    <Td><form action=\"\">\r\n                        <ButtonRefresh className=\"btn btn-info\" onClick={handleRefresh}>Lazy</ButtonRefresh>\r\n                    </form></Td>\r\n                    : null }\r\n                    \r\n                {isAuth ? \r\n                    <TdControls>\r\n                        <form action=\"\">\r\n                            <ButtonX className=\"btn btn-success\" onClick={handleBuy}>Buy</ButtonX>\r\n                            <ButtonX className=\"btn btn-danger\" onClick={handleSell}>Sell</ButtonX>\r\n                    </form>\r\n                    </TdControls> : null }\r\n            </tr>\r\n            <Route path=\"/coin/:id\" component={CoinPage} />\r\n        </>\r\n    ); \r\n    }\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n ","import React, { useContext } from 'react';\r\nimport Coin from '../Coins/Coin';\r\nimport { UserContext } from \"../UserContext/UserContext\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Table = styled.table`\r\n    font-size: 1rem;\r\n    `;\r\n\r\nexport default function CoinList(props) {\r\n  const { isAuth } = useContext(UserContext);\r\n\r\n  return (\r\n    <Table className=\"table table-primary table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          {/* {props.showBalance ? <th>Balance</th> : null} */}\r\n          <th>Balance</th>\r\n          <th>Price</th>\r\n          { !props.isAutoRefresh ? <th>Refresh</th> : null }\r\n          { isAuth ? <th>Action</th> : null }\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.coinData.map(({ key, name, ticker, balance, price, change }) =>\r\n            <Coin\r\n              key={key}\r\n              id={key}\r\n              name={name}\r\n              handleRefresh={props.handleRefresh}\r\n              handleTransaction={props.handleTransaction}\r\n              ticker={ticker}\r\n              showBalance={props.showBalance}\r\n              balance={balance}\r\n              price={price}\r\n              change={change}\r\n              isAutoRefresh={props.isAutoRefresh}\r\n            />\r\n          )\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  )\r\n\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from \"../UserContext/UserContext\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Section = styled.section`\r\n    margin: 20px auto 0 auto;\r\n    max-width: 780px;\r\n    font-size: 2rem;\r\n\r\n    vertical-align: middle;\r\n    text-align: center;\r\n`;\r\n\r\nconst ButtonHelicopter = styled.button`\r\nmargin-left: 8px;\r\n`;\r\n\r\nconst ButtonToggleBalance = styled(ButtonHelicopter)`\r\nwidth: 150px;\r\n`;\r\n\r\nconst Balance = styled.div`\r\nmin-width: 250px;\r\nmargin: 0.5rem 0 0 2.5rem;\r\nfont-size: 1.5em;\r\nvertical-align: middle;\r\ntext-align: center;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nexport default function AccountBalance(props) {\r\n    const { isAuth } = useContext(UserContext);\r\n\r\n\r\n    const buttonBalanceText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    const buttonRefreshText = props.isAutoRefresh ? 'Lazy refresh' : 'Auto refresh';\r\n\r\n    let content = '\\u00A0';\r\n    if (props.showBalance) {\r\n        content = <span><strong>Balance : </strong> { formatter.format( props.amount ) }</span>;\r\n    }\r\n\r\n    const btnBalanceClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\r\n\r\n    return (\r\n        <>\r\n            <Balance> {content} </Balance>\r\n            <Section>\r\n                <button className='btn btn-info' \r\n                    onClick={props.handleAutoRefresh}>\r\n                         {buttonRefreshText}\r\n                </button>\r\n                { isAuth ? \r\n                <>\r\n                <ButtonToggleBalance className={btnBalanceClass}\r\n                     onClick={props.handleToggleBalance}>\r\n                         {buttonBalanceText}\r\n                </ButtonToggleBalance>\r\n                <ButtonHelicopter className=\"btn btn-success\"\r\n                    onClick={props.handleBrrrr}>\r\n                      <i className=\"fas fa-helicopter\"></i>\r\n                </ButtonHelicopter>\r\n                </>\r\n                : null\r\n                }\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport CoinList from '../components/CoinList/CoinList';\r\nimport AccountBalance from '../components/AccountBalance/AccountBalance';\r\nimport axios from 'axios';\r\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\n\r\nconst COIN_COUNT = 10;\r\nconst coinsUrl = 'https://api.coinpaprika.com/v1/coins';\r\nconst tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction Home(props) {\r\n\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n  const [isAutoRefresh, setIsAutoRefresh] = useState(false);\r\n\r\n\r\n  useEffect(function () {\r\n    if (coinData.length === 0) {\r\n      // component did mount\r\n      componentDidMount();\r\n\r\n    } else {\r\n      //component did update\r\n    }\r\n    /*Timer for AutoRefresh, TODO cleaner elseif*/\r\n    let interval = null;\r\n    if (isAutoRefresh) {\r\n      interval = setInterval(() => {\r\n          autoRefresh();\r\n      }, 20000);\r\n    } else if (!isAutoRefresh) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n\r\n  const componentDidMount = async () => {\r\n    const response = await axios.get(coinsUrl);\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    //debugger;\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n    const coinData = await Promise.all(promises);\r\n\r\n    const coinPriceData = coinData.map(function (response) {\r\n    const coin = response.data;\r\n      //debugger;\r\n    return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes[\"USD\"].price),\r\n        change: parseFloat(0)\r\n    };\r\n    });\r\n\r\n    setCoinData(coinPriceData);\r\n  }\r\n\r\n\r\n  const handleRefresh = async (valueChangeId) => {\r\n    const response = await axios.get(tickerUrl + valueChangeId);\r\n    //debugger;\r\n    const newPrice = formatPrice(response.data.quotes[\"USD\"].price);\r\n\r\n    const newCoinData = coinData.map(function (values) {\r\n     let newValues = { ...values };\r\n     //debugger;\r\n      if (values.key === valueChangeId) {\r\n        newValues.change = newPrice - newValues.price;\r\n        newValues.price = newPrice;\r\n      };\r\n      return newValues;\r\n    });\r\n\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n\r\n  const getCoinData = (id) => {\r\n    return axios.get(`${tickerUrl}${id}`);\r\n  }\r\n\r\n  const autoRefresh = async () => {\r\n \r\n    const responses = coinData.map(async values => {\r\n      let newValues = { ...values }; \r\n\r\n      const response = await getCoinData(values.key);\r\n      let newPrice = formatPrice(response.data.quotes['USD'].price);\r\n      newValues.change = newPrice - newValues.price;\r\n      newValues.price = newPrice;\r\n      return newValues;\r\n    });\r\n    const newCoinData = await Promise.all(responses);\r\n\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n\r\n  const handleAutoRefresh = () => {\r\n    setIsAutoRefresh(oldValue => !oldValue);\r\n  }\r\n\r\n  const handleToggleBalance = () => {\r\n    setShowBalance(oldValue => !oldValue);\r\n  }\r\n\r\n  const handleBrrrr = () => {\r\n    setBalance(oldBalance => oldBalance + 1200);\r\n  }\r\n\r\n  const handleTransaction = (isBuy, valueChangeId) => {\r\n    var balanceChange = isBuy ? 1 : -1;\r\n\r\n    const newCoinData = coinData.map(function (values) {\r\n      let newValues = { ...values };\r\n\r\n      if (valueChangeId === values.key) {\r\n        const canBuy = newValues.price < balance;\r\n        const canSell = newValues.balance > 0;\r\n        const isTradable = ((balanceChange > 0) && canBuy) || ((balanceChange < 0) && canSell);\r\n\r\n        if (isTradable) {\r\n        newValues.balance += balanceChange;\r\n        setBalance(oldBalance => oldBalance - balanceChange * newValues.price);\r\n        }\r\n      }\r\n      return newValues;\r\n    })\r\n\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <AccountBalance\r\n        amount={balance}\r\n        handleToggleBalance={handleToggleBalance}\r\n        handleAutoRefresh={handleAutoRefresh}\r\n        handleBrrrr={handleBrrrr}\r\n        showBalance={showBalance}\r\n        isAutoRefresh={isAutoRefresh} />\r\n      <CoinList\r\n        coinData={coinData}\r\n        handleRefresh={handleRefresh}\r\n        handleTransaction={handleTransaction}\r\n        showBalance={showBalance}\r\n        isAutoRefresh={isAutoRefresh} />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst DivAbout = styled.div`\r\n  height: 77vh;\r\n  padding-top: 2vh;\r\n\r\n`;\r\n\r\nconst Li = styled.li`\r\nlist-style: none;\r\nfont-size: 0.9rem;\r\n`;\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <DivAbout>\r\n      <p>\r\n        This app is a work in the context of <a href=\"https://academy.ivanontech.com/\">Ivan on Tech Academy</a> courses.\r\n      </p>\r\n\r\n\r\n      <ul>Themes of the courses :\r\n        <Li>Development environment for React</Li>\r\n        <Li>Class based and functional Components</Li>\r\n        <Li>Hooks : useState and useEffect</Li>\r\n        <Li>Api communication using axios and coinpaprika.com</Li>\r\n        <Li>Theming with bootstrap and styled components</Li>\r\n        <Li>Git and Github usage</Li>\r\n      </ul>\r\n\r\n      <ul>Extra learning:\r\n        <Li>Hook : useContext</Li>\r\n        <Li>Router, Switch, Navlink, Redirect, nested routes</Li>\r\n      </ul>\r\n\r\n      <p>\r\n        It's my first React app. The login process is superficial as there's no backend,\r\n        the only purpose is to simulate the process and use useContext.\r\n      </p>\r\n      <p>You need to login to access Buy and Sell. {'\\n '}\r\n        You can refresh manually a coin price with 'lazy refresh' or have all the coins refreshed each 20 secondes.{'\\n '}\r\n        When refreshing (it could take few minutes) prices blink if there's a change. \r\n        By clicking a coin name you will get the last tweets about the coin.</p>\r\n\r\n    </DivAbout>\r\n\r\n  );\r\n\r\n}","import React from 'react';\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst DivProfile = styled.div`\r\n  height: 77vh;\r\n  padding-top: 10%;\r\n\r\n`;\r\n\r\nconst Profile = () => {\r\n    \r\n    return (\r\n      <DivProfile>\r\n      <h1>This is the Profile Page</h1>\r\n      <article>\r\n        \r\n          <p>The user is logged in. You can have acces to balance, buy and sell. </p>\r\n        \r\n        <div>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\" \"}\r\n          <strong>Pellentesque risus mi</strong>, tempus quis placerat ut, porta\r\n          nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida\r\n          purus diam, et dictum  efficitur. Aenean ac{\" \"}\r\n          <em>eleifend lacus</em>, in mollis lectus. Donec sodales, arcu et\r\n          sollicitudin porttitor, tortor urna tempor ligula, id porttitor mi\r\n          magna a neque. Donec dui urna, vehicula et sem eget, facilisis sodales\r\n          sem.\r\n        </div>\r\n      </article>\r\n    </DivProfile>\r\n    );\r\n\r\n}\r\n\r\nexport default (Profile);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DivSignUp = styled.div`\r\n  height: 77vh;\r\n  padding-top: 10%;\r\n\r\n`;\r\n\r\nexport default function SignUp(props) {\r\n\r\n  return (\r\n    <DivSignUp>\r\n      <h1>This is the SignUp Page</h1>\r\n      <p>\r\n        Either the user wants to sign up or he has been redirected from the profile page because he is not logged in.\r\n      </p>\r\n\r\n    </DivSignUp>\r\n  );\r\n\r\n}","import React from 'react';\r\nimport './NotFound.css';\r\n\r\n\r\n\r\nexport default function NotFound(props) {\r\n    return (\r\n        <div id=\"notfoundContainer\">\r\n            <div id=\"notfoundDiv\">\r\n                <p id=\"notfound\" title=\"404\">404</p>\r\n                <p className=\"notfoundComment\">\r\n                    it seems you are lost, this page does not exist\r\n                  </p>\r\n            </div>\r\n            <div>\r\n                <p className=\"notfoundComment\">\r\n                    (following an example from Piotr Galor : Clean CSS Glitch)\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { UserContext } from \"./components/UserContext/UserContext\";\r\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport AuthRoute from './components/AuthRoute/AuthRoute';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Profile from './pages/Profile';\r\nimport SignUp from './pages/SignUp';\r\nimport NotFound from './pages/NotFound';\r\nimport CoinPage from './pages/CoinPage';\r\nimport styled from 'styled-components';\r\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\n\r\nconst DivApp = styled.div`\r\n    text-align: center;\r\n    background-color: rgb(20, 56, 97);\r\n    color: #cccccc;\r\n    `;\r\n\r\n\r\nfunction App(props) {\r\n  const [isAuth, setIsAuth] = useState(false);\r\n\r\n  /*\r\n  regex for routing :\r\n\r\n  to Home : (/|/coin-exchange)(/|) matches / and /coin-exchange/ and coin-exchange\r\n  to CoinPage : (|/coin-exchange)/coin/:id matches /coin/id and /coin-exchange/coin/id\r\n  */\r\n\r\n  return (\r\n    <DivApp>\r\n      <BrowserRouter>\r\n        <ExchangeHeader />\r\n        <UserContext.Provider value={{ isAuth, setIsAuth }} >\r\n          <NavBar />\r\n\r\n          <div className=\"container mt-2\" style={{ marginTop: 40 }}>\r\n            <Switch>\r\n              {/* <Route exact strict path=\"/\" component={Home} /> */}\r\n              {/* <Route exact strict path=\"/coin-exchange*\" component={Home} /> */}\r\n              <Route exact strict path=\"(/|/coin-exchange)(/|)\" component={Home} />\r\n\r\n              <Route exact path=\"/about\" component={About} />\r\n  \r\n              <AuthRoute exact path=\"/profile\" component={Profile} />\r\n\r\n              <Route exact path=\"/signup\" component={SignUp} />\r\n\r\n              {/* <Route exact path=\"/coin/:id\" component={CoinPage} /> */}\r\n              <Route exact  path=\"(|/coin-exchange)/coin/:id\" component={CoinPage} />\r\n\r\n              <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </UserContext.Provider>\r\n      </BrowserRouter>\r\n    </DivApp>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}